@model List<KhaKhau.Models.Order>
@{
    ViewData["Title"] = "Lịch sử đơn hàng";
}
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<link href="/css/orderhistory.css" rel="stylesheet" />

<div class="container">
    <h2 class="text-center mb-4">Lịch sử đơn hàng</h2>

   

    <!-- Form tìm kiếm và bộ lọc -->
    <form method="get" class="row g-3 mb-4">
        <div class="col-md-4">
            <input type="text" name="searchOrderCode" class="form-control" placeholder="Nhập mã đơn hàng" />
        </div>
        <div class="col-md-4">
            <select name="statusId" class="form-select">
                <option value="">Tất cả trạng thái</option>
                <option value="1">Chờ xác nhận</option>
                <option value="2">Đang giao</option>
                <option value="3">Đã giao</option>
                <option value="1002">Đã hủy</option>
            </select>
        </div>
        <div class="col-md-4">
            <button type="submit" class="btn btn-primary w-100">Tìm kiếm</button>
        </div>
    </form>

    <!-- Danh sách đơn hàng -->
    <table class="table table-bordered text-center">
        <thead>
            <tr>
                <th>#</th>
                <th>Mã đơn hàng</th>
                <th>Ngày đặt</th>
                <th>Trạng thái</th>
                <th>Tổng tiền</th>
                <th>Thao tác</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Any())
            {
                @foreach (var order in Model.Select((item, index) => new { item, index }))
                {
                    <tr>
                        <td data-label="#">@(order.index + 1)</td>
                        <td data-label="Mã đơn hàng">@order.item.Id</td>
                        <td data-label="Ngày đặt">@order.item.CreateDate.ToString("dd/MM/yyyy")</td>
                        <td data-label="Trạng thái">
                            <span class="status-badge @GetStatusBadgeClass(order.item.OrderStatusId)">
                                @order.item.OrderStatus.StatusName
                            </span>
                        </td>
                        <td data-label="Tổng tiền">@order.item.OrderDetail.Sum(d => d.Quantity * d.UnitPrice).ToString("N0") đ</td>
                        <td data-label="Thao tác">
                            <a asp-action="OrderDetails" asp-route-orderId="@order.item.Id" class="btn btn-info btn-sm">Xem chi tiết</a>

                            @if (order.item.OrderStatusId == 1) // Trạng thái "Chờ xác nhận"
                            {
                                <button type="button" class="btn btn-danger btn-sm" onclick="cancelOrder(@order.item.Id)">Hủy đơn</button>
                            }
                            else if (order.item.OrderStatusId == 1002) // Trạng thái "Đã hủy"
                            {
                                <span class="text-muted">Đã hủy</span>
                            }
                            else
                            {
                                <span class="text-muted">Không thể hủy</span>
                            }
                        </td>

                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="6">Không tìm thấy đơn hàng nào</td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Helper để xử lý trạng thái -->
@functions {
    private string GetStatusBadgeClass(int statusId)
    {
        return statusId switch
        {
            1 => "status-pending",   // Chờ xác nhận
            2 => "status-delivering",// Đang giao
            3 => "status-delivered", // Đã giao
            1002 => "status-danger", // Đã hủy
            _ => "status-secondary", // Không xác định
        };
    }
}


    @if (TempData["Message"] != null)
{
    <script>
        Swal.fire({
            icon: 'success',
            title: 'Thành công',
            text: '@TempData["Message"]',
            confirmButtonText: 'OK'
        });
    </script>
}

@if (TempData["Error"] != null)
{
    <script>
        Swal.fire({
            icon: 'error',
            title: 'Lỗi',
            text: '@TempData["Error"]',
            confirmButtonText: 'OK'
        });
    </script>
}

    <script>
    function cancelOrder(orderId) {
        Swal.fire({
            title: 'Bạn có chắc chắn muốn hủy đơn hàng này?',
            html: '<strong>Hành động này không thể hoàn tác!</strong>',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Có, hủy đơn!',
            cancelButtonText: 'Không',
            reverseButtons: true

        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    url: '/Order/CancelOrder',
                    type: 'POST',
                    data: { orderId: orderId },
                    success: function (response) {
                        if (response.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Thành công!',
                                text: response.message,
                                confirmButtonText: 'OK'
                            }).then(() => {
                                location.reload(); // Tải lại trang để cập nhật danh sách
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Lỗi!',
                                text: response.message,
                                confirmButtonText: 'OK'
                            });
                        }
                    },
                    error: function () {
                        Swal.fire({
                            icon: 'error',
                            title: 'Lỗi!',
                            text: 'Không thể hủy đơn hàng. Vui lòng thử lại.',
                            confirmButtonText: 'OK'
                        });
                    }
                });
            }
        });
    }



   

</script>
<style>
    .swal2-html-container {
        text-decoration: none !important;
    }

</style>